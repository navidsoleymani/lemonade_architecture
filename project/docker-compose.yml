version: '3'
services:
  postgres:
    image: postgres:15-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - "${DATABASES_PORT}"
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${DATABASES_USER}
      POSTGRES_PASSWORD: ${DATABASES_PASSWORD}
      POSTGRES_DB: ${DATABASES_NAME}
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "80:80"
    depends_on:
      - web
      - front_end
  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic -c --noinput &&
             python manage.py compilemessages --ignore=env &&
             python manage.py loaddata admin_interface_theme_django.json &&
             python manage.py loaddata admin_interface_theme_bootstrap.json &&
             python manage.py loaddata admin_interface_theme_foundation.json &&
             python manage.py loaddata admin_interface_theme_uswds.json &&
             python manage.py loaddata config/fixtures/bechinberimthem.json &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    expose:
      - "8000"
    env_file:
      - ./.env
  redis:
    image: redis:7.2-alpine
    restart: always
    env_file:
      - ./.env
    expose:
      - "6379"
volumes:
  postgres_data:
  static_volume:
  media_volume: